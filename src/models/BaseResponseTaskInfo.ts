import { ApiException, throwException } from "./ApiException"

export interface IBaseResponseTaskInfo   {
        
        /** task identifier
unique task identifier in our system in the UUID format */
        id?: string | undefined
        
        /** status code of the task
generated by DataForSEO, can be within the following range: 10000-60000
you can find the full list of the response codes here */
        status_code?: number | undefined
        
        /** informational message of the task
you can find the full list of general informational messages here */
        status_message?: string | undefined
        
        /** execution time, seconds */
        time?: string | undefined
        
        /** total tasks cost, USD */
        cost?: number | undefined
        
        /** number of elements in the result array */
        result_count?: number | undefined
        
        /** URL path */
        path?: string[] | undefined
        
        /** contains the same parameters that you specified in the POST request */
        data?: { [key: string]: any; } | undefined

    [key: string]: any;

    }

export class BaseResponseTaskInfo  implements IBaseResponseTaskInfo {
    
    /** task identifier
unique task identifier in our system in the UUID format */

    id?: string | undefined;
    
    /** status code of the task
generated by DataForSEO, can be within the following range: 10000-60000
you can find the full list of the response codes here */

    status_code?: number | undefined;
    
    /** informational message of the task
you can find the full list of general informational messages here */

    status_message?: string | undefined;
    
    /** execution time, seconds */

    time?: string | undefined;
    
    /** total tasks cost, USD */

    cost?: number | undefined;
    
    /** number of elements in the result array */

    result_count?: number | undefined;
    
    /** URL path */

    path?: string[] | undefined;
    
    /** contains the same parameters that you specified in the POST request */

    data?: { [key: string]: any; } | undefined;

    [key: string]: any;


    constructor(data?: IBaseResponseTaskInfo) {

    if (data) {
        for (var property in data) {
            if (data.hasOwnProperty(property))
                (<any>this)[property] = (<any>data)[property];
        }
    }

    }

    init(data?: any) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
            this.id = data["id"];
            this.status_code = data["status_code"];
            this.status_message = data["status_message"];
            this.time = data["time"];
            this.cost = data["cost"];
            this.result_count = data["result_count"];
            this.path = data["path"];
            this.data = data["data"];
        }
    }

    static fromJS(data: any): BaseResponseTaskInfo {
        data = typeof data === 'object' ? data : {};


        let result = new BaseResponseTaskInfo();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};

        
        
        data["id"] = this.id;
        data["status_code"] = this.status_code;
        data["status_message"] = this.status_message;
        data["time"] = this.time;
        data["cost"] = this.cost;
        data["result_count"] = this.result_count;
        data["path"] = this.path;
        data["data"] = this.data;
        return data;
    }
}